apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.werf.yml -o ./.helm/templates
    kompose.controller.type: statefulset
    kompose.service.expose: keycloakdb.actix-yew-oidc.test
    kompose.service.expose.ingress-class-name: nginx
    kompose.version: 1.28.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: actix-yew-oidc-keycloakdb
  name: actix-yew-oidc-keycloakdb
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: actix-yew-oidc-keycloakdb
  serviceName: actix-yew-oidc-keycloakdb
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.network/actix-yew-oidc-network: "true"
        io.kompose.service: actix-yew-oidc-keycloakdb
    spec:
      containers:
        - env:
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_USER
              value: postgres
          image: postgres:12.9
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -h 127.0.0.1
            failureThreshold: 5
            periodSeconds: 5
            timeoutSeconds: 5
          name: actix-yew-oidc-keycloakdb
          ports:
            - containerPort: 5432
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: keycloakdb
      restartPolicy: Always
      volumes:
        - name: keycloakdb
          persistentVolumeClaim:
            claimName: keycloakdb
  updateStrategy: {}
  volumeClaimTemplates:
    - metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: keycloakdb
        name: keycloakdb
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 100Mi
      status: {}
status:
  replicas: 0
